substitutions:
  friendly_name: "ESP32Cam module"
  name: esp32cam

esphome:
  name: "${name}"
  friendly_name: "${friendly_name}"

esp32:
  board: esp32dev
  framework:
    type: arduino

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  ap:
    ssid: "Esp32Cam Fallback Hotspot"
    password: !secret wifi_fallback_password

captive_portal:
ota:
logger:
  level: INFO

web_server:
  port: 80
  local: true
  ota: true

esp32_camera_web_server:
  - port: 8080
    mode: stream
  - port: 8081
    mode: snapshot

mqtt:
  broker: !secret mqtt_server
  username: !secret mqtt_username
  password: !secret mqtt_password
  discovery: false
  reboot_timeout: 0s
  birth_message:
    topic: "${name}/sensor/state"
    payload: online
  will_message:
    topic: "${name}/sensor/state"
    payload: offline
  shutdown_message:
    topic: "${name}/sensor/state"
    payload: shutdown

output:
  - id: flashlight_output
    platform: ledc
    pin: GPIO4

light:
  - id: flashlight_light
    platform: monochromatic
    name: ${friendly_name} Flashlight
    output: flashlight_output

text_sensor:
  - platform: version
    name: "${friendly_name} firmware version"
    id: firmware_version

button:
  - platform: restart
    name: "${friendly_name} Restart"
    retain: false

sensor:
  - platform: wifi_signal
    name: "${friendly_name} WiFi Signal"
    update_interval: 60s      

esp32_camera:
  name: "${friendly_name}"
  external_clock:
    pin: GPIO0
    frequency: 20MHz
  i2c_pins:
    sda: GPIO26
    scl: GPIO27
  data_pins: [GPIO5, GPIO18, GPIO19, GPIO21, GPIO36, GPIO39, GPIO34, GPIO35]
  vsync_pin: GPIO25
  href_pin: GPIO23
  pixel_clock_pin: GPIO22
  power_down_pin: GPIO32
  max_framerate: 10 fps   
  idle_framerate: 1 fps 
  resolution: 1024x768
  jpeg_quality: 10
  # on_stream_start:
  #   then:
  #     - light.turn_on: flashlight_light
  # on_stream_stop:
  #   then:
  #     - light.turn_off: flashlight_light
